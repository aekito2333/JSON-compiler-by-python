
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DOT FALSE LBRACE LPARENTHESE LSQBRACKET NULL NUMBER RBRACE RPARENTHESE RSQBRACKET STRING TRUE\n    JSON : object\n         | array\n    object : LBRACE members RBRACEmembers : pair COMMA members\n               | pair\n               | emptypair : STRING COLON valuearray : LSQBRACKET valuelist RSQBRACKETvaluelist : valuelist COMMA value\n\t             | value\n\t             | emptyvalue : NUMBER\n             | STRING\n             | array\n             | object\n             | TRUE\n             | FALSE\n             | NULLempty : '
    
_lr_action_items = {'LBRACE':([0,5,22,24,],[4,4,4,4,]),'LSQBRACKET':([0,5,22,24,],[5,5,5,5,]),'$end':([1,2,3,20,23,],[0,-1,-2,-3,-8,]),'STRING':([4,5,21,22,24,],[9,14,9,14,14,]),'RBRACE':([4,6,7,8,13,14,15,16,17,18,19,20,21,23,25,26,],[-19,20,-5,-6,-12,-13,-14,-15,-16,-17,-18,-3,-19,-8,-4,-7,]),'NUMBER':([5,22,24,],[13,13,13,]),'TRUE':([5,22,24,],[17,17,17,]),'FALSE':([5,22,24,],[18,18,18,]),'NULL':([5,22,24,],[19,19,19,]),'RSQBRACKET':([5,10,11,12,13,14,15,16,17,18,19,20,23,27,],[-19,23,-10,-11,-12,-13,-14,-15,-16,-17,-18,-3,-8,-9,]),'COMMA':([5,7,10,11,12,13,14,15,16,17,18,19,20,23,26,27,],[-19,21,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-3,-8,-7,-9,]),'COLON':([9,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'JSON':([0,],[1,]),'object':([0,5,22,24,],[2,16,16,16,]),'array':([0,5,22,24,],[3,15,15,15,]),'members':([4,21,],[6,25,]),'pair':([4,21,],[7,7,]),'empty':([4,5,21,],[8,12,8,]),'valuelist':([5,],[10,]),'value':([5,22,24,],[11,26,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> JSON","S'",1,None,None,None),
  ('JSON -> object','JSON',1,'p_JSON','compiler.py',109),
  ('JSON -> array','JSON',1,'p_JSON','compiler.py',110),
  ('object -> LBRACE members RBRACE','object',3,'p_object','compiler.py',114),
  ('members -> pair COMMA members','members',3,'p_members','compiler.py',118),
  ('members -> pair','members',1,'p_members','compiler.py',119),
  ('members -> empty','members',1,'p_members','compiler.py',120),
  ('pair -> STRING COLON value','pair',3,'p_pair','compiler.py',124),
  ('array -> LSQBRACKET valuelist RSQBRACKET','array',3,'p_array','compiler.py',128),
  ('valuelist -> valuelist COMMA value','valuelist',3,'p_valuelist','compiler.py',132),
  ('valuelist -> value','valuelist',1,'p_valuelist','compiler.py',133),
  ('valuelist -> empty','valuelist',1,'p_valuelist','compiler.py',134),
  ('value -> NUMBER','value',1,'p_value','compiler.py',138),
  ('value -> STRING','value',1,'p_value','compiler.py',139),
  ('value -> array','value',1,'p_value','compiler.py',140),
  ('value -> object','value',1,'p_value','compiler.py',141),
  ('value -> TRUE','value',1,'p_value','compiler.py',142),
  ('value -> FALSE','value',1,'p_value','compiler.py',143),
  ('value -> NULL','value',1,'p_value','compiler.py',144),
  ('empty -> <empty>','empty',0,'p_empty','compiler.py',148),
]
