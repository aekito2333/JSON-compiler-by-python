Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    LPARENTHESE
    RPARENTHESE

Grammar

Rule 0     S' -> JSON
Rule 1     JSON -> object
Rule 2     JSON -> array
Rule 3     object -> LBRACE members RBRACE
Rule 4     members -> pair COMMA members
Rule 5     members -> pair
Rule 6     members -> empty
Rule 7     pair -> STRING COLON value
Rule 8     array -> LSQBRACKET valuelist RSQBRACKET
Rule 9     valuelist -> valuelist COMMA value
Rule 10    valuelist -> value
Rule 11    valuelist -> empty
Rule 12    value -> NUMBER
Rule 13    value -> STRING
Rule 14    value -> array
Rule 15    value -> object
Rule 16    value -> TRUE
Rule 17    value -> FALSE
Rule 18    value -> NULL
Rule 19    empty -> <empty>

Terminals, with rules where they appear

COLON                : 7
COMMA                : 4 9
DOT                  : 
FALSE                : 17
LBRACE               : 3
LPARENTHESE          : 
LSQBRACKET           : 8
NULL                 : 18
NUMBER               : 12
RBRACE               : 3
RPARENTHESE          : 
RSQBRACKET           : 8
STRING               : 7 13
TRUE                 : 16
error                : 

Nonterminals, with rules where they appear

JSON                 : 0
array                : 2 14
empty                : 6 11
members              : 3 4
object               : 1 15
pair                 : 4 5
value                : 7 9 10
valuelist            : 8 9

Parsing method: LALR

state 0

    (0) S' -> . JSON
    (1) JSON -> . object
    (2) JSON -> . array
    (3) object -> . LBRACE members RBRACE
    (8) array -> . LSQBRACKET valuelist RSQBRACKET

    LBRACE          shift and go to state 4
    LSQBRACKET      shift and go to state 5

    JSON                           shift and go to state 1
    object                         shift and go to state 2
    array                          shift and go to state 3

state 1

    (0) S' -> JSON .



state 2

    (1) JSON -> object .

    $end            reduce using rule 1 (JSON -> object .)


state 3

    (2) JSON -> array .

    $end            reduce using rule 2 (JSON -> array .)


state 4

    (3) object -> LBRACE . members RBRACE
    (4) members -> . pair COMMA members
    (5) members -> . pair
    (6) members -> . empty
    (7) pair -> . STRING COLON value
    (19) empty -> .

    STRING          shift and go to state 9
    RBRACE          reduce using rule 19 (empty -> .)

    members                        shift and go to state 6
    pair                           shift and go to state 7
    empty                          shift and go to state 8

state 5

    (8) array -> LSQBRACKET . valuelist RSQBRACKET
    (9) valuelist -> . valuelist COMMA value
    (10) valuelist -> . value
    (11) valuelist -> . empty
    (12) value -> . NUMBER
    (13) value -> . STRING
    (14) value -> . array
    (15) value -> . object
    (16) value -> . TRUE
    (17) value -> . FALSE
    (18) value -> . NULL
    (19) empty -> .
    (8) array -> . LSQBRACKET valuelist RSQBRACKET
    (3) object -> . LBRACE members RBRACE

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NULL            shift and go to state 19
    RSQBRACKET      reduce using rule 19 (empty -> .)
    COMMA           reduce using rule 19 (empty -> .)
    LSQBRACKET      shift and go to state 5
    LBRACE          shift and go to state 4

    valuelist                      shift and go to state 10
    value                          shift and go to state 11
    empty                          shift and go to state 12
    array                          shift and go to state 15
    object                         shift and go to state 16

state 6

    (3) object -> LBRACE members . RBRACE

    RBRACE          shift and go to state 20


state 7

    (4) members -> pair . COMMA members
    (5) members -> pair .

    COMMA           shift and go to state 21
    RBRACE          reduce using rule 5 (members -> pair .)


state 8

    (6) members -> empty .

    RBRACE          reduce using rule 6 (members -> empty .)


state 9

    (7) pair -> STRING . COLON value

    COLON           shift and go to state 22


state 10

    (8) array -> LSQBRACKET valuelist . RSQBRACKET
    (9) valuelist -> valuelist . COMMA value

    RSQBRACKET      shift and go to state 23
    COMMA           shift and go to state 24


state 11

    (10) valuelist -> value .

    RSQBRACKET      reduce using rule 10 (valuelist -> value .)
    COMMA           reduce using rule 10 (valuelist -> value .)


state 12

    (11) valuelist -> empty .

    RSQBRACKET      reduce using rule 11 (valuelist -> empty .)
    COMMA           reduce using rule 11 (valuelist -> empty .)


state 13

    (12) value -> NUMBER .

    RSQBRACKET      reduce using rule 12 (value -> NUMBER .)
    COMMA           reduce using rule 12 (value -> NUMBER .)
    RBRACE          reduce using rule 12 (value -> NUMBER .)


state 14

    (13) value -> STRING .

    RSQBRACKET      reduce using rule 13 (value -> STRING .)
    COMMA           reduce using rule 13 (value -> STRING .)
    RBRACE          reduce using rule 13 (value -> STRING .)


state 15

    (14) value -> array .

    RSQBRACKET      reduce using rule 14 (value -> array .)
    COMMA           reduce using rule 14 (value -> array .)
    RBRACE          reduce using rule 14 (value -> array .)


state 16

    (15) value -> object .

    RSQBRACKET      reduce using rule 15 (value -> object .)
    COMMA           reduce using rule 15 (value -> object .)
    RBRACE          reduce using rule 15 (value -> object .)


state 17

    (16) value -> TRUE .

    RSQBRACKET      reduce using rule 16 (value -> TRUE .)
    COMMA           reduce using rule 16 (value -> TRUE .)
    RBRACE          reduce using rule 16 (value -> TRUE .)


state 18

    (17) value -> FALSE .

    RSQBRACKET      reduce using rule 17 (value -> FALSE .)
    COMMA           reduce using rule 17 (value -> FALSE .)
    RBRACE          reduce using rule 17 (value -> FALSE .)


state 19

    (18) value -> NULL .

    RSQBRACKET      reduce using rule 18 (value -> NULL .)
    COMMA           reduce using rule 18 (value -> NULL .)
    RBRACE          reduce using rule 18 (value -> NULL .)


state 20

    (3) object -> LBRACE members RBRACE .

    $end            reduce using rule 3 (object -> LBRACE members RBRACE .)
    RSQBRACKET      reduce using rule 3 (object -> LBRACE members RBRACE .)
    COMMA           reduce using rule 3 (object -> LBRACE members RBRACE .)
    RBRACE          reduce using rule 3 (object -> LBRACE members RBRACE .)


state 21

    (4) members -> pair COMMA . members
    (4) members -> . pair COMMA members
    (5) members -> . pair
    (6) members -> . empty
    (7) pair -> . STRING COLON value
    (19) empty -> .

    STRING          shift and go to state 9
    RBRACE          reduce using rule 19 (empty -> .)

    pair                           shift and go to state 7
    members                        shift and go to state 25
    empty                          shift and go to state 8

state 22

    (7) pair -> STRING COLON . value
    (12) value -> . NUMBER
    (13) value -> . STRING
    (14) value -> . array
    (15) value -> . object
    (16) value -> . TRUE
    (17) value -> . FALSE
    (18) value -> . NULL
    (8) array -> . LSQBRACKET valuelist RSQBRACKET
    (3) object -> . LBRACE members RBRACE

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NULL            shift and go to state 19
    LSQBRACKET      shift and go to state 5
    LBRACE          shift and go to state 4

    value                          shift and go to state 26
    array                          shift and go to state 15
    object                         shift and go to state 16

state 23

    (8) array -> LSQBRACKET valuelist RSQBRACKET .

    $end            reduce using rule 8 (array -> LSQBRACKET valuelist RSQBRACKET .)
    RSQBRACKET      reduce using rule 8 (array -> LSQBRACKET valuelist RSQBRACKET .)
    COMMA           reduce using rule 8 (array -> LSQBRACKET valuelist RSQBRACKET .)
    RBRACE          reduce using rule 8 (array -> LSQBRACKET valuelist RSQBRACKET .)


state 24

    (9) valuelist -> valuelist COMMA . value
    (12) value -> . NUMBER
    (13) value -> . STRING
    (14) value -> . array
    (15) value -> . object
    (16) value -> . TRUE
    (17) value -> . FALSE
    (18) value -> . NULL
    (8) array -> . LSQBRACKET valuelist RSQBRACKET
    (3) object -> . LBRACE members RBRACE

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NULL            shift and go to state 19
    LSQBRACKET      shift and go to state 5
    LBRACE          shift and go to state 4

    value                          shift and go to state 27
    array                          shift and go to state 15
    object                         shift and go to state 16

state 25

    (4) members -> pair COMMA members .

    RBRACE          reduce using rule 4 (members -> pair COMMA members .)


state 26

    (7) pair -> STRING COLON value .

    COMMA           reduce using rule 7 (pair -> STRING COLON value .)
    RBRACE          reduce using rule 7 (pair -> STRING COLON value .)


state 27

    (9) valuelist -> valuelist COMMA value .

    RSQBRACKET      reduce using rule 9 (valuelist -> valuelist COMMA value .)
    COMMA           reduce using rule 9 (valuelist -> valuelist COMMA value .)

